

//using memory alloction 1 dimen, and vector
//object resulting 2 dimen

/* 
note 
pag part ng object gaya ng vector ay gagamitin
ng parenthesis para mahiwalay ang object
memebers nito ex:

 vector< obj > A[10];  
obj _obj;

(A[0]).push_back( _obj );  //add new object

//gamitan ng (  A  ).etc object here

(A[0]).[ 0 ].nuim;   //pede na ma-access ang 
                  //object members


*/

#include<iostream>
#include<vector>

struct Z { //2

      int num;
      std::string s;
      Z(  );
};//2

Z::Z(  ){//2

      num = 0;
      s = "_";
}//2

void init(  std::vector<  struct Z > *A ) {//2

      
      for(int I = 0, X =0;  I < 3 ; I+=1  ) {//3
            
            //input a brach in array of 2d  
           
            
            for( int J = 0 ;   J < 3 ; J+=1, X+=1  ){//4
            
                  struct Z z;
                  (A[ I ]).push_back(  z ) ;
                  (A[ I ]) [ J ].num = X +10;
                
            }//4
       }//3      
}//2


void disp(  std::vector<  struct Z > *A ) {//22                  
    
       for(int I = 0;  I < 3 ; I+=1  ) {//3
                        
            for( int J = 0 ;   J < 3 ; J+=1  ){//4
            
                      std::cout << "\n I "<<  I 
                         << " J " <<  J 
                         << " A  " <<  (A[ I ]) [ J ].num;          
            }//4
       }//3      

}//2

int main(void) {//2

      std::vector< struct Z > *A;
      A = new std::vector< struct Z > [  10 ] ;
      init( A );
      
       disp( A);      
       std::cout << "\nexit...";          
       return 0;            
}//2




